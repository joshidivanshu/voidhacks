#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.19
#  in conjunction with Tcl version 8.6
#    Apr 06, 2019 04:54:38 PM IST  platform: Windows NT

import sys
import practise

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import project_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    project_support.set_Tk_var()
    top = Toplevel1 (root)
    project_support.init(root, top)
    root.mainloop()

w = None
def create_Toplevel1(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = tk.Toplevel (root)
    project_support.set_Tk_var()
    top = Toplevel1 (w)
    project_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85' 
        _ana2color = '#ececec' # Closest X11 color: 'gray92' 
        font9 = "-family {Segoe UI Black} -size 12 -weight bold -slant"  \
            " roman -underline 0 -overstrike 0"
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("600x450+475+85")
        top.title("New Toplevel")
        top.configure(background="#d9d9d9")

        self.Frame1 = tk.Frame(top)
        self.Frame1.place(relx=0.0, rely=0.0, relheight=1.011, relwidth=0.992)
        self.Frame1.configure(relief='groove')
        self.Frame1.configure(borderwidth="7")
        self.Frame1.configure(relief='groove')
        self.Frame1.configure(background="#d85fd4")
        self.Frame1.configure(highlightbackground="#1defa2")
        self.Frame1.configure(highlightcolor="#0d6363")
        self.Frame1.configure(highlightthickness="5")
        self.Frame1.configure(width=595)


        self.Message1 = tk.Message(self.Frame1)
        self.Message1.place(relx=0.319, rely=0.066, relheight=0.051 , relwidth=0.303)
        self.Message1.configure(background="#d9d9d9")
        self.Message1.configure(borderwidth="2")
        self.Message1.configure(font=font9)
        self.Message1.configure(foreground="#000000")
        self.Message1.configure(highlightbackground="#d9d9d9")
        self.Message1.configure(highlightcolor="#000000")
        self.Message1.configure(text='''WELCOME''')
        self.Message1.configure(width=180)

        self.st=tk.StringVar()
        self.s=tk.StringVar()

        self.cbState = ttk.Combobox(self.Frame1)
        self.cbState.place(relx=0.118, rely=0.264, relheight=0.046
                , relwidth=0.24)
        self.cbState.configure(textvariable=project_support.combobox)
        self.cbState.configure(takefocus="")
        self.cbState.configure(value=["Andhra Pradesh", "Arunachal Pradesh", "Assam", "Bihar", "Chhattisgarh", "Delhi", "Goa", "Gujarat",
                   "Haryana", "Himachal Pradesh", "Jammu & Kashmir",
                   "Jharkhand", "Karnataka", "Kerala", "Madhya Pradesh", "Maharashtra", "Manipur", "Meghalaya",
                   "Mizoram", "Nagaland", "Orissa", "Punjab", "Rajasthan", "Sikkim",
                   "Tamil Nadu", "Tripura", "Uttar Pradesh", "Uttarakhand", "West Bengal", "A & N Islands",
                   "Chandigarh", "D & N Haveli", "Daman & Diu", "Lakshadweep",
                   "Puducherry", "Telangana"])

        self.a = tk.StringVar()
        self.cbState.configure(textvariable=self.a)
        self.b=tk.StringVar()
        self.cbYear = ttk.Combobox(self.Frame1)
        self.cbYear.place(relx=0.655, rely=0.264, relheight=0.046, relwidth=0.24)

        self.cbYear.configure(textvariable=project_support.combobox)
        self.cbYear.configure(takefocus="")
        self.cbYear.configure(value=["","2011","2012","2013","2014","2015"])
        self.cbYear.configure(textvariable=self.b)

        self.btnHeatMap = tk.Button(self.Frame1)
        self.btnHeatMap.place(relx=0.269, rely=0.593, height=24, width=127)
        self.btnHeatMap.configure(activebackground="#ececec")
        self.btnHeatMap.configure(activeforeground="#000000")
        self.btnHeatMap.configure(background="#d9d9d9")
        self.btnHeatMap.configure(borderwidth="4")
        self.btnHeatMap.configure(disabledforeground="#a3a3a3")
        self.btnHeatMap.configure(foreground="#000000")
        self.btnHeatMap.configure(highlightbackground="#d9d9d9")
        self.btnHeatMap.configure(highlightcolor="black")
        self.btnHeatMap.configure(pady="0")
        self.btnHeatMap.configure(text='''Heat Map''')
        self.btnHeatMap.configure(width=127)
        self.btnHeatMap.configure(command=self.heatmap)

        self.btnPieChart = tk.Button(self.Frame1)
        self.btnPieChart.place(relx=0.655, rely=0.593, height=24, width=137)
        self.btnPieChart.configure(activebackground="#ececec")
        self.btnPieChart.configure(activeforeground="#000000")
        self.btnPieChart.configure(background="#d9d9d9")
        self.btnPieChart.configure(borderwidth="4")
        self.btnPieChart.configure(disabledforeground="#a3a3a3")
        self.btnPieChart.configure(foreground="#000000")
        self.btnPieChart.configure(highlightbackground="#d9d9d9")
        self.btnPieChart.configure(highlightcolor="black")
        self.btnPieChart.configure(pady="0")
        self.btnPieChart.configure(text='''PieChart''')
        self.btnPieChart.configure(width=137)
        self.btnPieChart.configure(command=self.piechart)

    def heatmap(self):
       practise.check_2011('heatmap', self.cbState.get(), self.b.get() )

    def piechart(self):
        practise.check_2011('xyz', self.cbState.get(), self.b.get())

if __name__ == '__main__':
    vp_start_gui()





